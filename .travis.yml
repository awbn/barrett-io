language: php
php:
  - 5.3

branches:
  only:
    - master
    - staging

before_install:
  - "git submodule update --init --recursive"

notifications:
  email:
    recipients:
      - build@barrett.io
    on_success: always
    on_failure: always

env:
  global:
    # PAGODABOX_USERNAME
    - secure: "c3tOOwmueCSeVub6VE1qFL7bGVlC4Xj1BIYSU89Z9iJpgjokn0O1dW1cGwuv\nf/jQdPBhWmi42gw7Jvzc6q4H05CgIvkOedcSxdiQXIU7a5oc+80PCt48WTtb\nroYNcLQXAvzC6gbu+9lhtkjpd1H6xcnrkmbKi2LCIOEQAfOgmk4="
    # PAGODABOX_PASSWORD
    - secure: "GW+XkC47U2mEAsFAXzN4sHcQLuVanglBH+IleBdaNn1yMvFA427hdFvJWoO0\nTkAJJZibdpMQ8fjlx/gwmj/b5W8xgP5jMcrLWCurDBWh8AR2gRvUbrZE45Sn\n4D1DRiOkw+UV9LYbdWpM+i+zj4sdHlZmuV2AkvgMEgB15uCSB40="
    # PAGODABOX_APP
    - PAGODABOX_STAGING=staging-barrett-io
    - PAGODABOX_PROD=staging-barrett-io

script:
  # tests would be here.
  - echo $TRAVIS_BRANCH
  # deployment from here down.
  - PAGODABOX_APP=$PAGODABOX_STAGING && [[ "$TRAVIS_BRANCH" == "master" ]] && PAGODABOX_APP=$PAGODABOX_PROD
  - gem install pagoda
  - ssh-keygen -N "" -f ~/.ssh/pagoda
  - pagoda --username=$PAGODABOX_USERNAME --password=$PAGODABOX_PASSWORD key:push --file=$HOME/.ssh/pagoda.pub
  - echo "Host git.pagodabox.com" >> ~/.ssh/config
  - echo "   StrictHostKeyChecking no" >> ~/.ssh/config
  - echo "   CheckHostIP yes" >> ~/.ssh/config
  - echo "   UserKnownHostsFile=/dev/null" >> ~/.ssh/config
  - echo "   IdentityFile=${HOME}/.ssh/pagoda" >> ~/.ssh/config
  - echo "   IdentitiesOnly yes" >> ~/.ssh/config
  - git remote add pagoda git@git.pagodabox.com:$PAGODABOX_APP.git
  - git push --force pagoda $TRAVIS_BRANCH
  - pagoda --username=$PAGODABOX_USERNAME --password=$PAGODABOX_PASSWORD --app=$PAGODABOX_APP deploy
